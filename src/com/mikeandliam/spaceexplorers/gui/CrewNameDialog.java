package com.mikeandliam.spaceexplorers.gui;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.util.Optional;

/**
 * The dialog that pops up when creating crew members.
 * To use this:
 * Optional<String> name = CrewNameDialog.getCrewName();
 * <p>
 * will contain the name if OK was pressed, else it will return Optional.empty()
 */
public class CrewNameDialog extends JDialog {
    private JPanel contentPane;
    private JButton buttonOK;
    private JButton buttonCancel;
    private JTextField nameTextField;

    private Optional<String> returnValue = Optional.empty();

    /**
     * All of this is auto-generated by Intellij dialog creator
     */
    public CrewNameDialog() {
        setTitle("Set crew name...");

        setContentPane(contentPane);
        setModal(true);
        getRootPane().setDefaultButton(buttonOK);

        buttonOK.addActionListener(e -> onOK());

        buttonCancel.addActionListener(e -> onCancel());

        // call onCancel() when cross is clicked
        setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {
                onCancel();
            }
        });

        // call onCancel() on ESCAPE
        contentPane.registerKeyboardAction(e -> onCancel(), KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
    }

    /**
     * @param relativeToComponent The component that this dialog will pop up relative to
     *                            ie. it will be displayed next to whatever component is passed in
     * @return The optional of the name. if Cancel or X pressed: returns Optional.empty() otherwise contains name
     */
    public static Optional<String> getCrewName(Component relativeToComponent) {
        CrewNameDialog dialog = new CrewNameDialog();
        dialog.setLocationRelativeTo(relativeToComponent);
        dialog.pack();

        //this blocks until window closed
        dialog.setVisible(true);

        return dialog.returnValue;
    }

    private void onOK() {
        if (!nameTextField.getText().equals("")) {
            returnValue = Optional.of(nameTextField.getText());
            dispose();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Must enter a name");
        }
    }

    private void onCancel() {
        returnValue = Optional.empty();
        dispose();
    }

}
